How this function will work
===========================

this function will add two integers ``add_integer(a, b=98)``

How users will use this function
================================

users will pass two integers in a function ``add_integer(a, b=98)``
it similar to using a + b

::

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(1, 2)
	3

::

	>>> add_integer(100, -2)
	98

If we have floats, floats will be converted into integers before adding

::

	>>> add_integer(2.2, 3)
	5

if a is not an integero or a float, we will get a TypeError

::

	>>> add_integer('fab', 4)
	Traceback (most recent call last):
	TypeError: a must be an integer

if b is not an integer or a float, we will get a TypeError

::

	>>> add_integer(4, 'gas')
	Traceback (most recent call last):
	TypeError: b must be an integer

if only one argument is provided, it will also work and the value provided will be a and b by default will be 98

::

	>>> add_integer(2)
	100

if no argument is passes to the function, it will give TypeError

::

	>>> add_integer(3.4, None)
	Traceback (most recent call last):
	TypeError: b must an integer

if a is was not provided, we will get an error

::

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

if both a and b are non integers and not floats it will print a TypeError a must be an integer

::

	>>> add_integer('fab', 'sam')
	Traceback (most recent call last):
	TypeError: a must be an integer

if both a and b are floats they will be converted into integers and then add them

::
	>>> add_integer(3.2, 4.3)
	7

if infinit is provided we will get an error

::

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

::

	>>> add_integer(2.3, float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

with NaN numbers we will get a ValueError

::

	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer

::

	>>> add_integer(2, float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer
